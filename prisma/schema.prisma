generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UnitType {
  UNIDAD
  PESO
}

model Product {
  id           Int        @id @default(autoincrement())
  name         String
  description  String?    @db.VarChar(255)
  brand        String?
  sellingPrice Decimal
  unitType     UnitType // UNIDAD | PESO (merely used for a more clear UX, could be discarded)
  stock        Decimal
  isArchived   Boolean
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  SaleItem     SaleItem[]
  Purchase     Purchase[] // History of purchases for this product
}

model Purchase {
  id        Int      @id @default(autoincrement())
  totalCost Decimal
  amount    Decimal
  supplier  String?
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model Client {
//   id         Int      @id @default(autoincrement())
//   name       String
//   phone      String
//   address    String? // optional
//   isArchived Boolean
//   createdAt  DateTime @default(now())
//   updatedAt  DateTime @updatedAt
//   Sale       Sale[] // client sales history
// }

model Sale {
  id         Int        @id @default(autoincrement())
  totalPrice Decimal
  // clientId   Int
  // client     Client     @relation(fields: [clientId], references: [id])
  saleItems  SaleItem[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model SaleItem {
  id              Int     @id @default(autoincrement())
  calculatedPrice Decimal
  quantity        Decimal // kilos or units
  saleId          Int
  sale            Sale    @relation(fields: [saleId], references: [id])
  productId       Int
  product         Product @relation(fields: [productId], references: [id])

  @@index([saleId])
  @@index([productId])
}
